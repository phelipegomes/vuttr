{"ast":null,"code":"var _jsxFileName = \"/home/phelp/myapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport api from './api';\n/* Bootstrap */\n\nimport { Button, Modal, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /* States of components  */\n  const [tools, setTools] = useState([]);\n  const [toolName, setToolName] = useState('');\n  const [toolLink, setToolLink] = useState('');\n  const [toolDescription, setToolDescription] = useState('');\n  const [toolTags, setToolTags] = useState([\"customize\", \"reactJS\", \"notchange\"]);\n  const [selectedTool, setSelectedTool] = useState();\n  /* States of Modals */\n\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [showModalRemove, setShowModalRemove] = useState(false);\n  /* States of Inputs */\n\n  const [inputSearch, setInputSearch] = useState('');\n  const [checkbox, setCheckbox] = useState(false);\n  /* Modal Controllers - Add Tools */\n\n  const handleCloseModalAdd = () => {\n    setShowModalAdd(false);\n    window.location.reload(false);\n  };\n\n  const handleShowModalAdd = () => {\n    setShowModalAdd(true);\n  };\n  /* Modal Controllers - Remove Tools */\n\n\n  const handleCloseModalRemove = () => {\n    setShowModalRemove(false);\n    window.location.reload(false);\n  };\n\n  const handleShowModalRemove = () => {\n    setShowModalRemove(true);\n  };\n  /* Initialization API with all items */\n\n\n  useEffect(() => {\n    api.get(\"\").then(response => setTools(response.data)).catch(err => {\n      console.error(\"Failed to get API response\" + err);\n    });\n  }, []);\n  /* POST: Adding New Tools with modal */\n\n  const addTool = () => {\n    api.post(\"\", {\n      title: toolName,\n      link: toolLink,\n      description: toolDescription,\n      tags: toolTags\n    });\n  };\n  /* DELETE: Deleting by ID Tools with confirmation modal */\n\n\n  const removeTool = id => {\n    api.delete(`${id}`);\n  };\n  /* Search Tools in API */\n\n\n  const searchTool = input => {\n    if (!checkbox) {\n      /* GET: Searching by all positions in API */\n      api.get(`?q=${input}`).then(response => setTools(response.data)).catch(err => {\n        console.error(\"Failed to get API response\" + err);\n      });\n    } else {\n      /* GET: Searching by TAGS position in API */\n      api.get(`?tags_like=${input}`).then(response => setTools(response.data)).catch(err => {\n        console.error(\"Failed to get API response\" + err);\n      });\n    }\n  };\n  /* Starting Render HTML components */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"VUTTR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Very Useful Tools to Remeber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\",\n            value: inputSearch,\n            onChange: e => setInputSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"spam\", {\n            className: \"p-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => searchTool(inputSearch),\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => {\n              if (checkbox) {\n                setCheckbox(false);\n              } else {\n                setCheckbox(true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Search in tags only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleShowModalAdd(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [console.log(tools), console.log(inputSearch), console.log(\"checkbox = \" + checkbox), tools.map(tools => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [tools.title, \" \\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  setSelectedTool(tools.id);\n                  handleShowModalRemove();\n                },\n                children: \"remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 40\n            }, this), tools.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 40\n            }, this), tools.tags.map(tags => /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"#\", tags, \"  \\xA0 \"]\n              }, tags, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, tools.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModalAdd,\n        onHide: () => handleCloseModalAdd(),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"+ Add new tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tool Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toolName,\n            onChange: e => setToolName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tool Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toolLink,\n            onChange: e => setToolLink(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tool description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toolDescription,\n            onChange: e => setToolDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toolTags,\n            onChange: e => setToolTags(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              addTool();\n              handleCloseModalAdd();\n            },\n            children: \"Add tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModalRemove,\n        onHide: () => handleCloseModalRemove(),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"x Remove tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Are you sure you want to remove  ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              removeTool(selectedTool);\n              handleCloseModalRemove();\n            },\n            children: \"Yes, remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => {\n              handleCloseModalRemove();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JlkUCmSi/6azx/syT2WAVF1AkW0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/phelp/myapp/src/App.js"],"names":["React","useEffect","useState","api","Button","Modal","Container","Row","Col","App","tools","setTools","toolName","setToolName","toolLink","setToolLink","toolDescription","setToolDescription","toolTags","setToolTags","selectedTool","setSelectedTool","showModalAdd","setShowModalAdd","showModalRemove","setShowModalRemove","inputSearch","setInputSearch","checkbox","setCheckbox","handleCloseModalAdd","window","location","reload","handleShowModalAdd","handleCloseModalRemove","handleShowModalRemove","get","then","response","data","catch","err","console","error","addTool","post","title","link","description","tags","removeTool","id","delete","searchTool","input","e","target","value","log","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './api';\n\n/* Bootstrap */\nimport { Button, Modal, Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n\n  /* States of components  */\n  const [tools, setTools] = useState([]);\n  const [toolName, setToolName] = useState('');\n  const [toolLink, setToolLink] = useState('');\n  const [toolDescription, setToolDescription] = useState('');\n  const [toolTags, setToolTags] = useState([\"customize\", \"reactJS\", \"notchange\"]);\n  const [selectedTool, setSelectedTool] = useState();\n\n  /* States of Modals */\n  const [showModalAdd, setShowModalAdd] = useState(false);\n  const [showModalRemove, setShowModalRemove] = useState(false);\n\n  /* States of Inputs */\n  const [inputSearch, setInputSearch] = useState('');\n  const [checkbox, setCheckbox] = useState(false);\n\n  /* Modal Controllers - Add Tools */\n  const handleCloseModalAdd = () => {\n    setShowModalAdd(false);\n    window.location.reload(false);\n  };\n\n  const handleShowModalAdd = () => {\n    setShowModalAdd(true);\n  };\n\n  /* Modal Controllers - Remove Tools */\n  const handleCloseModalRemove = () => {\n    setShowModalRemove(false);\n    window.location.reload(false);\n  };\n\n  const handleShowModalRemove = () => {\n    setShowModalRemove(true);\n  };\n\n  /* Initialization API with all items */\n  useEffect(() => {\n    api\n      .get(\"\")\n      .then((response) => setTools(response.data))\n      .catch((err) => {\n        console.error(\"Failed to get API response\" + err);\n      });\n\n  }, []);\n\n  /* POST: Adding New Tools with modal */\n  const addTool = () => {\n    api.post(\"\", {\n      title: toolName,\n      link: toolLink,\n      description: toolDescription,\n      tags: toolTags\n    }\n    )\n  }\n\n  /* DELETE: Deleting by ID Tools with confirmation modal */\n  const removeTool = (id) => {\n    api.delete(`${id}`);\n  }\n\n  /* Search Tools in API */\n  const searchTool = (input) => {\n    if (!checkbox) {\n\n      /* GET: Searching by all positions in API */\n      api\n        .get(`?q=${input}`)\n        .then((response) => setTools(response.data))\n        .catch((err) => {\n          console.error(\"Failed to get API response\" + err);\n        });\n\n    } else {\n\n      /* GET: Searching by TAGS position in API */\n      api\n        .get(`?tags_like=${input}`)\n        .then((response) => setTools(response.data))\n        .catch((err) => {\n          console.error(\"Failed to get API response\" + err);\n        });\n    }\n  }\n\n  /* Starting Render HTML components */\n  return (\n\n    \n    <div className=\"App\">\n      <Container className=\"pt-5\">\n        <Row className=\"pt-2\">\n          <h1>VUTTR</h1>\n        </Row>\n\n        <Row className=\"pt-2\">\n          <h2>Very Useful Tools to Remeber</h2>\n        </Row>\n\n        <Row className=\"pt-2\">\n          <Col>\n             \n          <input \n              type=\"text\" \n              placeholder=\"Search\" \n              value={inputSearch}\n              onChange={(e) => setInputSearch(e.target.value)}>\n          </input>\n\n            <spam className=\"p-2\">\n            <button onClick={() => searchTool(inputSearch)}>Search</button>\n            </spam>\n            <input \n              type=\"checkbox\"\n              onChange={() => {\n                if (checkbox) {\n                  setCheckbox(false);\n                } else {\n                  setCheckbox(true);\n                }\n              }\n            }>\n            </input>\n\n            <span>Search in tags only</span>\n          </Col>\n\n          <Col>\n          <button onClick={() => handleShowModalAdd()}>Add</button>\n          </Col>\n        </Row>\n         \n       \n         \n      \n       \n            \n     \n\n  \n            \n     \n     \n          <div className=\"list\">\n     \n      \n\n      \n\n        {console.log(tools)}\n\n        {console.log(inputSearch)}\n        {console.log(\"checkbox = \" + checkbox)}\n\n        {tools.map(tools => (\n\n          <li key={tools.title}>\n            <h2>\n              {tools.title} &nbsp; <span><button className=\"delete\" onClick={() => {\n                setSelectedTool(tools.id);\n                handleShowModalRemove()\n              }}>remove</button></span><br />\n\n              {tools.description}<br /><br />\n\n              {tools.tags.map(tags => (\n                <strong><span key={tags}>#{tags}  &nbsp; </span></strong>\n              ))}\n\n            </h2>\n\n          </li>\n        ))}\n\n      </div>\n\n\n      {/* MODAL QUE PARA ADICIONAR FERRAMENTAS */}\n\n      <Modal show={showModalAdd} onHide={() => handleCloseModalAdd()}>\n        <Modal.Header closeButton>\n          <Modal.Title>+ Add new tool</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h1>Tool Name</h1>\n          <input\n            type=\"text\"\n            value={toolName}\n            onChange={(e) => setToolName(e.target.value)}\n          />\n          <br />\n\n          <h1>Tool Link</h1>\n          <input\n            type=\"text\"\n            value={toolLink}\n            onChange={(e) => setToolLink(e.target.value)}\n          />\n          <br />\n\n          <h1>Tool description</h1>\n          <input\n            type=\"text\"\n            value={toolDescription}\n            onChange={(e) => setToolDescription(e.target.value)}\n          />\n          <br />\n\n          <h1>Tags</h1>\n          <input\n            type=\"text\"\n            value={toolTags}\n            onChange={(e) => setToolTags(e.target.value)}\n          />\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => { addTool(); handleCloseModalAdd() }}>\n            Add tool\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* MODAL QUE PARA REMOVER FERRAMENTAS */}\n\n      <Modal show={showModalRemove} onHide={() => handleCloseModalRemove()}>\n        <Modal.Header closeButton>\n          <Modal.Title>x Remove tool</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h1>Are you sure you want to remove  ?</h1>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => { removeTool(selectedTool); handleCloseModalRemove() }}>\n            Yes, remove\n          </Button>\n          <Button variant=\"secondary\" onClick={() => { handleCloseModalRemove() }}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Container>\n    </div >\n  );\n}"]},"metadata":{},"sourceType":"module"}